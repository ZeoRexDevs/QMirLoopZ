name: "Series on HVC1"

on:
  workflow_dispatch:
    inputs:
      Season:
        description: "Season"
        required: true
        type: choice
        options:
        - "01"
        - "02"
        - "03"
        - "04"
      EpNum:
        description: "EpNum"
        required: true
        type: choice
        options:
        - "01"
        - "02"
        - "03"
        - "25"
        - "26"
      JobSequence:
        description: "JobSequence"
        required: true
        type: number
        default: 0
      EncPreset:
        description: "EncPreset"
        required: true
        default: "veryslow"
        type: choice
        options:
        - slower
        - veryslow
        - placebo
      Resolution:
        description: "Resolution"
        required: true
        type: choice
        options:
        - "576"
        - "720"
      Purpose:
        description: "Purpose"
        required: true
        type: choice
        options:
        - ren
        - arc

env:
  SOURCERY: ${{ secrets.SOURCERY }}
  LocationOnIndex: "td:/MiraculouSourceryZ"
  R3NC0D3R: "HVC1"
  Variant: "Series"
  Season: ${{ github.event.inputs.Season }}
  EpNum: ${{ github.event.inputs.EpNum }}
  SubLocation: "S${{ github.event.inputs.Season }}E${{ github.event.inputs.EpNum }}"
  InFilePrefix: "Miraculous.Tales.of.Ladybug.and.Cat.Noir.S${{ github.event.inputs.Season }}E${{ github.event.inputs.EpNum }}"
  JobSequence: ${{ github.event.inputs.JobSequence }}
  EncPreset: ${{ github.event.inputs.EncPreset }}
  Resolution: ${{ github.event.inputs.Resolution }}
  Purpose: ${{ github.event.inputs.Purpose }}
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE_CONFIG_URL }}
  RCLONE_INSTALL_MIRROR: ${{ secrets.RCLONE_INSTALL_MIRROR }}
  FTOOL_ARC_URL: ${{ secrets.FTOOL_ARC_URL }}
  FTOOL_CONVERTER: ${{ secrets.FTOOL_CONVERTER }}
  FTOOL_PROBER: ${{ secrets.FTOOL_PROBER }}

jobs:

  primary:
    runs-on: ubuntu-latest

    outputs:
      FrameRate: ${{ steps.set-params.outputs.FrameRate }}
      ExactFrameRate: ${{ steps.set-params.outputs.ExactFrameRate }}
      GOPSize: ${{ steps.set-params.outputs.GOPSize }}
      GOPType: ${{ steps.set-params.outputs.GOPType }}
      APIState: ${{ steps.set-params.outputs.APIState }}
      finalChunk: ${{ steps.set-params.outputs.finalChunk }}
      matrix: ${{ steps.set-params.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: EncTool Preparation
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./20-EncCh-24ba778c022e
          DEOBFUS ./20-EncDl-6acfecc9f2b5
          DEOBFUS ./20-EncRn-b9f7efef991e
      - name: Upload EncTools as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ytool
          path: /usr/local/bin/ff*
      - name: Create EncMatrix
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./41-EncMtrx-9006e1ebae5b
      - name: Pass Parameters to EncMatrix
        id: set-params
        run: |
          echo "::set-output name=FrameRate::${FrameRate}"
          echo "::set-output name=ExactFrameRate::${ExactFrameRate}"
          echo "::set-output name=GOPSize::${GOPSize}"
          echo "::set-output name=GOPType::${GOPType}"
          echo "::set-output name=APIState::${APIState}"
          echo "::set-output name=finalChunk::${finalChunk}"
          echo "::set-output name=matrix::${matrix}"

  enc_hvc1:
    runs-on: ubuntu-latest
    needs: primary

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        ChunkNum: ${{fromJson(needs.primary.outputs.matrix)}}

    env:
      ChunkNum: ${{ matrix.ChunkNum }}
      FrameRate: ${{ needs.primary.outputs.FrameRate }}
      ExactFrameRate: ${{ needs.primary.outputs.ExactFrameRate }}
      GOPType: ${{ needs.primary.outputs.GOPType }}
      GOPSize: ${{ needs.primary.outputs.GOPSize }}

    steps:
      - uses: actions/checkout@v3
      - name: Download EncTools from Artifact
        uses: actions/download-artifact@v3
        with:
          name: ytool
          path: /usr/local/bin/
      - name: EncTool Preparation
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./20-EncDl-6acfecc9f2b5
          sudo chmod a+x /usr/local/bin/ff*
      - name: HVC1 R3NC0D3R - Chunk_${{env.ChunkNum}} of ${{env.SubLocation}} - AIO
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./68-EncPreWr-a3327ad30631
          DEOBFUS ./72-EncX-ae3aca956963

  postEnc:
    runs-on: ubuntu-latest
    needs: [primary, enc_hvc1]

    env:
      APIState: ${{ needs.primary.outputs.APIState }}

    steps:
      - uses: actions/checkout@v3
      - name: Trigger Another Workflow
        if: env.APIState == 'trigger'
        env:
          GH_TOKEN2: ${{ secrets.GH_TOKEN2 }}
          GH_TOKEN3: ${{ secrets.GH_TOKEN3 }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./99-EncZ-948448f0c76f
      - name: Merge Whole Episode
        if: env.APIState == 'merge'
        env:
          GOPType: ${{ needs.primary.outputs.GOPType }}
          finalChunk: ${{ needs.primary.outputs.finalChunk }}
        run: |
          eval 'set -eo pipefail' 2>/dev/null && eval 'set +o history' 2>/dev/null
          echo "$SOURCERY" | base64 -d > SOURCERY
          source ./SOURCERY &>/dev/null && rm -f ./SOURCERY && eval 'set -o history' 2>/dev/null
          DEOBFUS ./20-EncCh-24ba778c022e
          DEOBFUS ./20-EncDl-6acfecc9f2b5
          DEOBFUS ./91-EncMr-db991ece1d25
      - uses: kolpav/purge-artifacts-action@v1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 4hr
